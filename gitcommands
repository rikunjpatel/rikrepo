
mkdir repo
cd repo/
git init
Set Global config
git config --global user.name "Rik Patel"
git config --global user.email "rpatel3@twutil.net"

# To configure you laptop or personal VM without git prompting user/password.
#Create .netrc file in your home dir with below content

[thames@VMName ~]$ pwd
/home/user
[thames@VMName ~]$ cat .netrc
machine PROJECTNAME.visualstudio.com
       login rpatel3@hello.net
       password Passw0rd!


Remove Global COnfig
git config --global --unset user.email
git config --global --unset user.name

git remote add origin https://PROJECT.visualstudio.com/Project%20Cloud%20-%20Azure/_git/Cloud%20Automation%20Scripts

# Below command will keep git efficient and quick
git config gc.auto 0 

git remote -v

git pull origin master
or
git pull https://PROJECT.visualstudio.com/Project%20Cloud%20-%20Azure/_git/Cloud%20Automation%20Scripts

git clone https://github.aws.uk.website.com/opspe/control-repo
or
git clone https://github.com/rikunjpatel/rikrepo.git
DO the required changes then run below:

git add .
git show
git commit -a  (This will open VIM to add comments save it with ESC : wq like in vi )
git commit -m"first commit"
git status
git push origin master

https://confluence.atlassian.com/bitbucketserver/basic-git-commands-776639767.html
google simple git commands

#####  Workinng with Remote Repos BRANCHING   ####
 # To pull REMOTE BRANCH and create a local branch.
1) First Add remote Repo

PS C:\Users\Rikits\Dropbox\Cloud\Azure\GITFIT>git remote add RikTest https://github.com/rikunjpatel/RikTest.git  

PS C:\Users\Rikits\Dropbox\Cloud\Azure\GITFIT> git remote -v
RikTest https://github.com/rikunjpatel/RikTest.git (fetch)
RikTest https://github.com/rikunjpatel/RikTest.git (push)

2) then run Git Fetch (this will fetch all the remote branches) 

PS C:\Users\Rikits\Dropbox\Cloud\Azure\GITFIT> git fetch --all 
Fetching RikTest
From https://github.com/rikunjpatel/RikTest
 * [new branch]      NEWBranch  -> RikTest/NEWBranch
 * [new branch]      develop    -> RikTest/develop
 * [new branch]      master     -> RikTest/master
 

3) Run Git Branch -av (this will show all the remote branches)

PS C:\Users\Rikits\Dropbox\Cloud\Azure\GITFIT> git branch -av 
* master                    b80db21 Merge pull request #4 from rikunjpatel/newbranch
  remotes/RikTest/NEWBranch a406ea9 Merge branch 'master' of https://github.com/rikunjpatel/MyRepoRik into NEWBranch  
  remotes/RikTest/develop   1783af7 Merge branch 'hotfix/0.0.2' into develop
  remotes/RikTest/master    c33fc0a WWWW
 
4) Now run Git Checkout -t remotes/repo/branch (this will copy the content of the remote branch and create a local branch)
 
PS C:\Users\Rikits\Dropbox\Cloud\Azure\GITFIT> git checkout -t remotes/RikTest/develop
Switched to a new branch 'develop'
Branch 'develop' set up to track remote branch 'develop' from 'RikTest'.

PS C:\Users\Rikits\Dropbox\Cloud\Azure\GITFIT> git branch -av
* develop                   1783af7 Merge branch 'hotfix/0.0.2' into develop
  master                    b80db21 Merge pull request #4 from rikunjpatel/newbranch
  remotes/RikTest/NEWBranch a406ea9 Merge branch 'master' of https://github.com/rikunjpatel/MyRepoRik into NEWBranch  remotes/RikTest/develop   1783af7 Merge branch 'hotfix/0.0.2' into develop
  remotes/RikTest/master    c33fc0a WWWW
  
 
 
5) Now do the changes to the required files or create new file ---> Stage --> commmit --> Push (you cal also push with the click of button on vscode it easier and quicker)
  
 git push --set-upstream RemoteRepo Remote branch name
 eg; git push --set-upstream RikRepo dev 
 
5.a) PS C:\Users\Rikits\Dropbox\Cloud\Azure\GITFIT> git branch -av
* develop                   01b329e [ahead 2] just another line added
  master                    b80db21 Merge pull request #4 from rikunjpatel/newbranch
  remotes/RikTest/NEWBranch a406ea9 Merge branch 'master' of https://github.com/rikunjpatel/MyRepoRik into NEWBranch  
  remotes/RikTest/develop   e1cf15c deleted some files and updated readme.md
  remotes/RikTest/master    c33fc0a WWWW

5.b) PS C:\Users\Rikits\Dropbox\Cloud\Azure\GITFIT> git status
On branch develop
Your branch is ahead of 'RikTest/develop' by 2 commits.
  (use "git push" to publish your local commits)

nothing to commit, working tree clean

5.c) PS C:\Users\Rikits\Dropbox\Cloud\Azure\GITFIT> git push --set-upstream RikTest develop
Enumerating objects: 8, done.
Counting objects: 100% (8/8), done.
Delta compression using up to 4 threads
Compressing objects: 100% (4/4), done.
Writing objects: 100% (6/6), 549 bytes | 32.00 KiB/s, done.
Total 6 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/rikunjpatel/RikTest.git
   e1cf15c..01b329e  develop -> develop
Branch 'develop' set up to track remote branch 'develop' from 'RikTest'.
PS C:\Users\Rikits\Dropbox\Cloud\Azure\GITFIT> git show
commit 01b329e5b79ca853c97910047c4e240a5e3131ce (HEAD -> develop, RikTest/develop)
Author: Rik Patel <rikunjpatel@yahoo.com>
Date:   Wed Dec 16 13:52:10 2020 +0000

    just another line added

diff --git a/README.md b/README.md
index 26148b0..82634ec 100644
--- a/README.md
+++ b/README.md
@@ -1 +1 @@
-# MyRepoRik
\ No newline at end of file
+# MyRepoRik

5.d) PS C:\Users\Rikits\Dropbox\Cloud\Azure\GITFIT> git status
On branch develop
Your branch is up to date with 'RikTest/develop'.

nothing to commit, working tree clean

6) Once pushed check with Git Branch -av to confirm the Hash number matches with the local branch along with the comment
 
PS C:\Users\Rikits\Dropbox\Cloud\Azure\GITFIT> git branch -av  
* develop                   01b329e just another line added  <<<<--Check the comment and the update code it's same as REMOTE branch)
  master                    b80db21 Merge pull request #4 from rikunjpatel/newbranch
  remotes/RikTest/NEWBranch a406ea9 Merge branch 'master' of https://github.com/rikunjpatel/MyRepoRik into NEWBranch  
  remotes/RikTest/develop   01b329e just another line added <<<<--Check the comment and the update code it's same as LOCAL branch)
  remotes/RikTest/master    c33fc0a WWWW
 
# To delete a local branch
git branch -d the_local_branch

# Create a new Branch and switch to it
  git checkout -b newbranchname
# Will tell you which branch currently you are on
  git branch
# Will switch to master branch
  git checkout master 
  git checkout newbranchname

# Once you checkout a branch anything you do in that folder will be done in that Checked branch.

 If the branch already exist it will still create local branch, but will not be able to Push any updates.
 First pull the remove branch with "git pull origin vm"
 This will download and pair the local branch with remote. 
 Only then you will be allowed to Push any new changes to the repo for that branch.
 
 git commit -a -m 'added a VM Runbook on VM Branch'
 git push --set-upstream origin vm # (Local Branch Name that needs to be pushed /created on the repo)
 git pull origin vm   #<<< need to run first to merge the remote branch with local branch
 git push --set-upstream origin vm
  
  
#Do the changes required to do in newbranchname run git add , git commit and git push to dev branch
  git add --all
  git commit -a -m 'added a new HISTORYon Dev Branch'
  git push --set-upstream origin newbranchname
  git status
  
 
 
 #HOW to keep the local branch updated with Master branch
 1) Switch to master branch
 2) Pull the latest update 
 3) Switch to the local branch you are working on
 4) run Git Rebase Master (or the branch you want to pull the updated from and merge local branch)
 
 Rik.Patel@laptop repo % git checkout master
Switched to branch 'master'
Your branch is behind 'origin/master' by 3 commits, and can be fast-forwarded.
  (use "git pull" to update your local branch)

Rik.Patel@laptop repo % git branch -v      
  CAZR-2017-Backup                 414b1bf6 image id updated to test zero downtime
  CAZR-2017-deploy-logstash-ukwest 414b1bf6 image id updated to test zero downtime
* master                           c5a1edd6 #patch Hotfix/ocp azdo agents (#892)
  master-temp                      fa18eaa7 #patch Auto device push on v2 Palo pipelines (#891) (<<<< Notice the branch is not same as Master)
  whitelist_urls                   8d152a7d updated list

Rik.Patel@laptop repo % git checkout master-temp
Switched to branch 'master-temp'

Rik.Patel@laptop nbs-azure-lz % git rebase master
Successfully rebased and updated refs/heads/master-temp.

Rik.Patel@laptop repo % git branch -v           
  CAZR-2017-Backup                 414b1bf6 image id updated to test zero downtime
  CAZR-2017-deploy-logstash-ukwest 414b1bf6 image id updated to test zero downtime
  master                           c5a1edd6 #patch Hotfix/ocp azdo agents (#892)
* master-temp                      c5a1edd6 #patch Hotfix/ocp azdo agents (#892) (<<<< Notice the branch is same as Master after Rebasing)
  whitelist_urls                   8d152a7d updated list
  
 
 
 
  Id CommandLine
  -- -----------
   1 cd
   2 cd ./clouddrive/TWGitRepo/
   3 git branch
   4 git checkout vm
   5 git checkout -b vm
   6 git branch
   7 ls
   8 cd vm
   9 cd ./Run_Runbooks/
  10 ls
  11 git add --all
  12  git commit -a -m 'added a VM Runbook on VM Branch'
  13  git push --set-upstream origin vm # (Local Branch Name that needs to be pushed /created on the repo)
  14 git pull origin vm   #<<< need to run first to merge the remote branch with local branch
  15  git push --set-upstream origin vm
  
  
#Do the changes required to do in newbranchname run git add , git commit and git push to dev branch
  git add --all
  git commit -a -m 'added a new HISTORYon Dev Branch'
  git push --set-upstream origin newbranchname
  git status
  
Now if all looks good with the changes made on newbranchname, merge it to the master
First checkout to master
  git checkout master 
  git branch
  git status
  git show
  
  git merge dev
  git status
  git show
Push it from local to master branch, confirm with git show & status
  git push origin master

Now if you did some change on the master branch directly, when you go back to Dev it's not visible
so simply first switch to the Dev branch and pull the updates from master branch
git pull origin master

git branch

cd control-repo/
git branch
git flow init
	configure the master(provisioning) develop(development) rest all should have "_" rather then "/" for eg; hotfix/ should be hotfix_


git flow hotfix start 0_1_13
bumpversion patch
git branch
cd hieradata/locations/aws/eu-west-1/core/
vi provisioning.yaml
git add provisioning.yaml
git commit -m"CP-287 #comment added new environment"
git push origin -u hotfix_0_1_13

Test the 
git tag 0_1_13
git push --tags


